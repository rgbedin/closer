// Tabbed Pane project template
import bb.cascades 1.0
//import bb.cascades.pickers 1.0
//import "BusinessCardCreator.qml"

TabbedPane {
    id: tabbedPane
    showTabsOnActionBar: true
    signal addNewRecord(string firstName)
    Tab {
        id: tab1
        title: qsTr("Cards Received")
//        NavegationPane {
//            property variant contentView
//            //        property bool addShown: false TODO Use this propertu only if adding to this list
            Page {
//                id: cardsReceivedListPage
//                Container {
//                    ListView {
//                        id: cardsReceivedList
//                        objectName: cardsReceivedList
//                        layout: StackListLayout {
//                            headerMode: ListHeaderMode.Sticky
//                        }
//                        dataModel: cardsModel //quotesModel TODO Definir no AttachedObjects
//                        listItemComponents: [
//                            ListItemComponent {
//                                type: "item"
//                                StandardListItem {
//                                    imageSpaceReserved: false
//                                    title: {
//                                        ListItemData.company + " " + ListItemData.corporateTitle;
//                                        //EXEMPLO: ListItemData.firstname + " " + ListItemData.lastname;
//                                    }
//                                }
//                            },
//                            ListItemComponent {
//                                type: "header"
//                                Header {
//                                    title: ListItemData
//                                }
//                            }
//                        ]
//                        onTriggered: {
//                            select(indexPath);
//                            var page = cardPageDefinition.createObject(); //quotePageDefinition.createObject(); TODO Definir no AttachedObjects
//                            tab.push(page); //nav.push(page);
//                        }
//                        onSelectionChanged: {
//                            if (selected) {
//                                var chosenItem = dataModel.data(indexPath);
//                                _contentView = chosenItem.firstname;
////                                if (chosenItem.firstname == undefined) {
//                                //                                    chosenItem.firstname = "";
//                                //                                }
//                                //                                _contentView = chosenItem;
//                            }
//                        }
//                        attachedObjects: [
//                            GroupDataModel {
//                                id: cardsModel
//                                //objectName: "cardsModel"
//                                grouping: ItemGrouping.ByFirstChar
//                                sortingKeys: [
//                                    "company",
//                                    "corporateTitle"
//                                ]
//                                //TODO On our app, we will add here using NFC.
//                                //                            onItemAdded: {
//                                //                                if (addShown) {
//                                //                                    if (nav.top == quoteListPage) {
//                                //                                        quotesList.clearSelection();
//                                //                                        quotesList.select(indexPath);
//                                //                                        quotesList.scrollToItem(indexPath, ScrollAnimation.Default);
//                                //
//                                //                                        var page = quotePageDefinition.createObject();
//                                //                                        nav.push(page);
//                                //                                    }
//                                //                                }
//                                //                            }
//
//                                //TODO************************************UNDERSTAND LATER
//                                onItemRemoved: {
//                                    var lastIndexPath = last();
//                                    if (lastIndexPath[0] == undefined) {
//                                        if (nav.top != quoteListPage) {
//                                            nav.popAndDelete();
//                                        }
//                                    }
//                                }
//                                //We don't update other people cards, but could be useful to update ours.
//                                // onItemUpdated: {
//                                //                    var chosenItem = data(indexPath);
//                                //                    _contentView = chosenItem;
//                                //                }
//                            }
//                        ]
//                    }
//                }
//                attachedObjects: [
//                    Sheet {
//                        id: addSheet
//                        CardPage {
//                            id: add
//                            onCardPageClose: {
//                                addSheet.close();
//                            }
//                        }
//                        onClosed: {
//                            add.newQuote();
//                        }
//                    },
//                    ComponentDefinition {
//                        id: cardPageDefinition //id: quotePageDefinition
//                        source: "CardPage.qml" //source: "QuotePage/QuotePage.qml" TODO Criar a CardPage
//                    }
//                ] // end of attachedObjects
                //We don't add cards here, we use NFC. Could be useful later.
                //              actions: [
                //                    ActionItem {
                //                        title: "Add"
                //                        imageSource: "asset:///images/Add.png"
                //                        ActionBar.placement: ActionBarPlacement.OnBar
                //                        onTriggered: {
                //                            addSheet.open();
                //                            nav.addShown = true;
                //                        }
                //                    }
                //                ] // end of attachedObjects
            }
//            onTopChanged: {
//                if (page == cardsReceivedListPage) {
//                    cardsReceivedListPage.clearSelection();
//                }
//            }
//            onPopTransitionEnded: {
//                page.destroy();
//            }
//        }
    }
    Tab {
        title: qsTr("Card Creator")
        
        Page {
            id: tab2
            //            Container {
            //                ImageView {
            //                    id: backgroundImage2
            //                    objectName: "backgroundImage"
            //                    imageSource: "asset:///images/background.png"
            //                    scalingMethod: ScalingMethod.Fill
            //                    horizontalAlignment: HorizontalAlignment.Center
            //                    verticalAlignment: VerticalAlignment.Center
            //                }
            //                layout: DockLayout {
            //                }
            //                Container {
            //                    id: menuContainer
            //                    //background: Color.create ("#262626")
            //                    layout: StackLayout {
            //                        orientation: LayoutOrientation.LeftToRight
            //                    }
            //                    verticalAlignment: VerticalAlignment.Bottom
            //                    horizontalAlignment: HorizontalAlignment.Center
            //                    bottomPadding: 25.0
            //                    ImageButton {
            //                        defaultImageSource: "asset:///images/text_icon.png"
            //                        //pressedImageSource: "asset:///myPressedImage.png"
            //                        //disabledImageSource: "asset:///myDisabledImage.png"
            //                        property int num: 1
            //                        onClicked: {
            //                            if (num == 1) {
            //                                textContainer.setVisible(true);
            //                                num = 0;
            //                            } else {
            //                                textContainer.setVisible(false);
            //                                num = 1;
            //                            }
            //                        }
            //                    }
            //                    Button {
            //                        text: "TCOLOR"
            //                        onClicked: {
            //                        }
            //                        preferredWidth: 25.0
            //                    }
            //                    ImageButton {
            //                        defaultImageSource: "asset:///images/picture_icon.png"
            //                        onClicked: {
            //                            picker.open()
            //                        }
            //                    }
            //                    Button {
            //                        text: "SOCIAL"
            //                        onClicked: {
            //                        }
            //                        preferredWidth: 25.0
            //                    }
            //                    Button {
            //                        objectName: "doneButton"
            //                        text: "DONE"
            //                        onClicked: {
            //                            _closer.writeXML(name.text, email.text, title.text, "test");
            //                        }
            //                        preferredWidth: 25.0
            //                    }
            //                }
            //                Container {
            //                    id: textContainer
            //                    property real dy: 0
            //                    property real dx: 0
            //                    property real currentY: 0
            //                    property real currentX: 0
            //                    property real lastX: 0
            //                    property real lastY: 0
            //                    layout: StackLayout {
            //                        orientation: LayoutOrientation.TopToBottom
            //                    }
            //                    verticalAlignment: VerticalAlignment.Top
            //                    horizontalAlignment: HorizontalAlignment.Center
            //                    preferredWidth: 400.0
            //                    preferredHeight: 150.0
            //                    topPadding: 25.0
            //                    TextField {
            //                        id: name
            //                        inputMode: TextFieldInputMode.Text
            //                        hintText: "Name"
            //                        textStyle.textAlign: TextAlign.Center
            //                        textStyle.fontSize: FontSize.PointValue
            //                        textStyle.fontWeight: FontWeight.Normal
            //                        textStyle.fontStyle: FontStyle.Normal
            //                        textStyle.fontSizeValue: 5.0
            //                        preferredWidth: 380.0
            //                        leftPadding: 0.0
            //                        rightPadding: 0.0
            //                        backgroundVisible: false
            //                    }
            //                    TextField {
            //                        id: email
            //                        inputMode: TextFieldInputMode.EmailAddress
            //                        hintText: "Email"
            //                        textStyle.textAlign: TextAlign.Center
            //                        textStyle.fontSize: FontSize.PointValue
            //                        textStyle.fontWeight: FontWeight.Normal
            //                        textStyle.fontStyle: FontStyle.Normal
            //                        textStyle.fontSizeValue: 5.0
            //                        preferredWidth: 380.0
            //                        backgroundVisible: false
            //                    }
            //                    TextField {
            //                        id: title
            //                        inputMode: TextFieldInputMode.Text
            //                        hintText: "Corporate Title"
            //                        textStyle.textAlign: TextAlign.Center
            //                        textStyle.fontSize: FontSize.PointValue
            //                        textStyle.fontWeight: FontWeight.Normal
            //                        textStyle.fontStyle: FontStyle.Normal
            //                        textStyle.fontSizeValue: 5.0
            //                        preferredWidth: 380.0
            //                        backgroundVisible: false
            //                    }
            //                    onTouch: {
            //
            //                        // disable implicit animations (?)
            //                        translationControllerY.enabled = false;
            //                        translationControllerX.enabled = false;
            //                        if (event.isDown()) {
            //                            // user initiates the touch event
            //                            // saves the current coordinate
            //                            dx = event.windowX;
            //                            dy = event.windowY;
            //                        } else if (event.isMove()) {
            //                            // user is moving the object
            //                            // sets the new position of the object
            //                            currentY = event.windowY - dy;
            //                            currentX = event.windowX - dx;
            //                            translationY = currentY;
            //                            translationX = currentX;
            //                            // saves the location of the last touch
            //                            lastX = event.windowX;
            //                            lastY = event.windowY;
            //                        } else if (event.isUp()) {
            //                            // call to add text
            //                            // user released the object
            //                        }
            //
            //                        // re-enabling the implicit animations (?)
            //                        translationControllerY.enabled = true;
            //                        translationControllerX.enabled = true;
            //                    }
            //                    attachedObjects: [
            //                        ImplicitAnimationController {
            //                            id: translationControllerY
            //                            propertyName: "translationY"
            //                        },
            //                        ImplicitAnimationController {
            //                            id: translationControllerX
            //                            propertyName: "translationX"
            //                        }
            //                    ]
            //                    visible: false
            //                }
            //            }
            //            attachedObjects: [
            //                // file picker object to choose the background picture
            //                FilePicker {
            //                    id: picker
            //                    property string selectedFile
            //                    title: qsTr("Image Picker")
            //                    mode: FilePickerMode.Picker
            //                    type: FileType.Picture
            //                    viewMode: FilePickerViewMode.Default
            //                    sortBy: FilePickerSortFlag.Default
            //                    sortOrder: FilePickerSortOrder.Default
            //                    onFileSelected: {
            //                        // grab the file selected
            //                        selectedFile = selectedFiles[0];
            //                        console.log("File Selected: " + selectedFile);
            //                        // set as background image
            //                        backgroundImage2.imageSource = selectedFile;
            //                    }
            //                }
            //            ]
        }
    }
    onCreationCompleted: {
        // this slot is called when declarative scene is created
        // write post creation initialization here
        console.log("TabbedPane - onCreationCompleted()")

        // enable layout to adapt to the device rotation
        // don't forget to enable screen rotation in bar-bescriptor.xml (Application->Orientation->Auto-orient)
        OrientationSupport.supportedDisplayOrientation = SupportedDisplayOrientation.All;
    }
}
